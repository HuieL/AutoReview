{"name": "ICLR_2017_188.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Dzmitry Bahdanau", "Philemon Brakel", "Kelvin Xu", "Anirudh Goyal", "Ryan Lowe", "Joelle Pineau", "Aaron Courville", "Yoshua Bengio"], "emails": [], "sections": [{"heading": null, "text": "We present an approach to training neural networks to generate sequences using actor-critic methods from reinforcement learning (RL). Current log-likelihood training methods are limited by the discrepancy between their training and testing modes, as models must generate tokens conditioned on their previous guesses rather than the ground-truth tokens. We address this problem by introducing a critic network that is trained to predict the value of an output token, given the policy of an actor network. This results in a training procedure that is much closer to the test phase, and allows us to directly optimize for a task-specific score such as BLEU. Crucially, since we leverage these techniques in the supervised learning setting rather than the traditional RL setting, we condition the critic network on the ground-truth output. We show that our method leads to improved performance on both a synthetic task, and for German-English machine translation. Our analysis paves the way for such methods to be applied in natural language generation tasks, such as machine translation, caption generation, and dialogue modelling."}, {"heading": "1 INTRODUCTION", "text": "In many important applications of machine learning, the task is to develop a system that produces a sequence of discrete tokens given an input. Recent work has shown that recurrent neural networks (RNNs) can deliver excellent performance in many such tasks when trained to predict the next output token given the input and previous tokens. This approach has been applied successfully in machine translation (Sutskever et al., 2014; Bahdanau et al., 2015), caption generation (Kiros et al., 2014; Donahue et al., 2015; Vinyals et al., 2015; Xu et al., 2015; Karpathy & Fei-Fei, 2015), and speech recognition (Chorowski et al., 2015; Chan et al., 2015).\nThe standard way to train RNNs to generate sequences is to maximize the log-likelihood of the \u201ccorrect\u201d token given a history of the previous \u201ccorrect\u201d ones, an approach often called teacher forcing. At evaluation time, the output sequence is often produced by an approximate search for the most likely candidate according to the learned distribution. During this search, the model is conditioned on its own guesses, which may be incorrect and thus lead to a compounding of errors (Bengio et al., 2015). This can become especially problematic for longer sequences. Due to this discrepancy between training and testing conditions, it has been shown that maximum likelihood training can be suboptimal (Bengio et al., 2015; Ranzato et al., 2015). In these works, the authors argue that the network should be trained to continue generating correctly given the outputs already produced by the model, rather than the ground-truth reference outputs from the data. This gives rise to the challenging problem of determining the target for the next network output. Bengio et al. (2015) use the token k from the ground-truth answer as the target for the network at step k, whereas Ranzato et al. (2015) rely on the REINFORCE algorithm (Williams, 1992) to decide whether or not the tokens\n\u2217CIFAR Senior Fellow \u2020CIFAR Fellow\nfrom a sampled prediction lead to a high task-specific score, such as BLEU (Papineni et al., 2002) or ROUGE (Lin & Hovy, 2003).\nIn this work, we propose and study an alternative procedure for training sequence prediction networks that aims to directly improve their test time metrics (which are typically not the log-likelihood). In particular, we train an additional network called the critic to output the value of each token, which we define as the expected task-specific score that the network will receive if it outputs the token and continues to sample outputs according to its probability distribution. Furthermore, we show how the predicted values can be used to train the main sequence prediction network, which we refer to as the actor. The theoretical foundation of our method is that, under the assumption that the critic computes exact values, the expression that we use to train the actor is an unbiased estimate of the gradient of the expected task-specific score.\nOur approach draws inspiration and borrows the terminology from the field of reinforcement learning (RL) (Sutton & Barto, 1998), in particular from the actor-critic approach (Sutton, 1984; Sutton et al., 1999; Barto et al., 1983). RL studies the problem of acting efficiently based only on weak supervision in the form of a reward given for some of the agent\u2019s actions. In our case, the reward is analogous to the task-specific score associated with a prediction. However, the tasks we consider are those of supervised learning, and we make use of this crucial difference by allowing the critic to use the ground-truth answer as an input. In other words, the critic has access to a sequence of expert actions that are known to lead to high (or even optimal) returns. To train the critic, we adapt the temporal difference methods from the RL literature (Sutton, 1988) to our setup. While RL methods with non-linear function approximators are not new (Tesauro, 1994; Miller et al., 1995), they have recently surged in popularity, giving rise to the field of \u2018deep RL\u2019 (Mnih et al., 2015). We show that some of the techniques recently developed in deep RL, such as having a target network, may also be beneficial for sequence prediction.\nThe contributions of the paper can be summarized as follows: 1) we describe how RL methodology like the actor-critic approach can be applied to supervised learning problems with structured outputs; and 2) we investigate the performance and behavior of the new method on both a synthetic task and a real-world task of machine translation, demonstrating the improvements over maximum-likelihood and REINFORCE brought by the actor-critic training."}, {"heading": "2 BACKGROUND", "text": "We consider the problem of learning to produce an output sequence Y = (y1, . . . , yT ), yt \u2208 A given an input X , where A is the alphabet of output tokens. We will often use notation Yf...l to refer to subsequences of the form (yf , . . . , yl). Two sets of input-output pairs (X,Y ) are assumed to be available for both training and testing. The trained predictor h is evaluated by computing the average task-specific score R(Y\u0302 , Y ) on the test set, where Y\u0302 = h(X) is the prediction. To simplify the formulas we always use T to denote the length of an output sequence, ignoring the fact that the output sequences may have different length.\nRecurrent neural networks A recurrent neural network (RNN) produces a sequence of state vectors (s1, . . . , sT ) given a sequence of input vectors (e1, . . . , eT ) by starting from an initial s0 state and applying T times the transition function f : st = f(st\u22121, et). Popular choices for the mapping f are the Long Short-Term Memory (Hochreiter & Schmidhuber, 1997) and the Gated Recurrent Units (Cho et al., 2014), the latter of which we use for our models.\nTo build a probabilistic model for sequence generation with an RNN, one adds a stochastic output layer g (typically a softmax for discrete outputs) that generates outputs yt \u2208 A and can feed these outputs back by replacing them with their embedding e(yt):\nyt \u223c g(st\u22121) (1) st = f(st\u22121, e(yt)). (2)\nThus, the RNN defines a probability distribution p(yt|y1, . . . , yt\u22121) of the next output token yt given the previous tokens (y1, . . . , yt\u22121). Upon adding a special end-of-sequence token \u2205 to the alphabet A, the RNN can define the distribution p(Y ) over all possible sequences as p(Y ) = p(y1)p(y2|y1) . . . p(yT |y1, . . . , yT\u22121)p(\u2205|y1, . . . , yT ).\nRNNs for sequence prediction To use RNNs for sequence prediction, they must be augmented to generate Y conditioned on an input X . The simplest way to do this is to start with an initial state s0 = s0(X) (Sutskever et al., 2014; Cho et al., 2014). Alternatively, one can encode X as a variable-length sequence of vectors (h1, . . . , hL) and condition the RNN on this sequence using an attention mechanism. In our models, the sequence of vectors is produced by either a bidirectional RNN (Schuster & Paliwal, 1997) or a convolutional encoder (Rush et al., 2015).\nWe use a soft attention mechanism (Bahdanau et al., 2015) that computes a weighted sum of a sequence of vectors. The attention weights determine the relative importance of each vector. More formally, we consider the following equations for RNNs with attention:\nyt \u223c g(st\u22121, ct\u22121) (3) st = f(st\u22121, ct\u22121, e(yt)) (4) \u03b1t = \u03b2(st, (h1, . . . , hL)) (5)\nct = L\u2211 j=1 \u03b1t,jhj (6)\nwhere \u03b2 is the attention mechanism that produces the attention weights \u03b1t and ct is the context vector, or \u2018glimpse\u2019, for time step t. The attention weights are computed by an MLP that takes as input the current RNN state and each individual vector to focus on. The weights are typically (as in our work) constrained to be positive and sum to 1 by using the softmax function.\nA conditioned RNN can be trained for sequence prediction by gradient ascent on the log-likelihood log p(Y |X) for the input-output pairs (X,Y ) from the training set. To produce a prediction Y\u0302 for a test input sequence X , an approximate beam search for the maximum of p(\u00b7|X) is usually conducted. During this search the probabilities p(\u00b7|y\u03021, . . . , y\u0302t\u22121) are considered, where the previous tokens y\u03021, . . . , y\u0302t\u22121 comprise a candidate beginning of the prediction Y\u0302 .\nValue functions We view the conditioned RNN as a stochastic policy that generates actions and receives the task score (e.g., BLEU score) as the return. We furthermore consider the case when the return R is partially received at the intermediate steps in the form of rewards rt: R(Y\u0302 , Y ) =\u2211T t=1 rt(y\u0302t; Y\u03021...t\u22121, Y ). This is more general than the case of receiving the full return at the end of the sequence, as we can simply define all rewards other than rT to be zero. Receiving intermediate rewards may ease the learning for the critic, and we use reward shaping as explained in Section 3. Given the policy, possible actions and reward function, the value represents the expected future return as a function of the current state of the system, which in our case is uniquely defined by the sequence of actions taken so far, Y\u03021...t\u22121.\nWe define the value of an unfinished prediction Y\u03021...t as follows:\nV (Y\u03021...t;X,Y ) = E Y\u0302t+1...T\u223cp(.|Y\u03021...t,X) T\u2211 \u03c4=t+1 r\u03c4 (y\u0302\u03c4 ; Y\u03021...\u03c4\u22121, Y ).\nWe define the value of a candidate next token a for an unfinished prediction Y\u03021...t\u22121 as the expected future return after generating token a:\nQ(a; Y\u03021...t\u22121, X, Y ) = E Y\u0302t+1...T\u223cp(.|Y\u03021...t\u22121a,X)\n( rt(a; Y\u03021...t\u22121, Y ) +\nT\u2211 \u03c4=t+1 r\u03c4 (y\u0302\u03c4 ; Y\u03021...t\u22121aY\u0302t+1...\u03c4 , Y )\n) .\nWe will refer to the candidate next tokens as actions. For notational simplicity, we henceforth drop X and Y from the signature of p, V , Q, R and rt, assuming it is clear from the context which of X and Y is meant. We will also use V without arguments for the expected reward of a random prediction.\nAlgorithm 1 Actor-Critic Training for Sequence Prediction Require: A critic Q\u0302(a; Y\u03021...t, Y ) and an actor p(a|Y\u03021...t, X) with weights \u03c6 and \u03b8 respectively.\n1: Initialize delayed actor p \u2032 and target critic Q\u0302\u2032 with same weights: \u03b8\u2032 = \u03b8, \u03c6\u2032 = \u03c6. 2: while Not Converged do 3: Receive a random example (X,Y ). 4: Generate a sequence of actions Y\u0302 from p \u2032 . 5: Compute targets for the critic\nqt = rt(y\u0302t; Y\u03021...t\u22121, Y ) + \u2211 a\u2208A p \u2032 (a|Y\u03021...t, X)Q\u0302\u2032(a; Y\u03021...t, Y )\n6: Update the critic weights \u03c6 using the gradient\nd\nd\u03c6 ( T\u2211 t=1 ( Q\u0302(y\u0302t; Y\u03021...t\u22121, Y )\u2212 qt )2 + \u03bbCCt )\nwhere Ct = \u2211 a\n( Q\u0302(a; Y\u03021...t\u22121)\u2212 1\n|A| \u2211 b Q\u0302(b; Y\u03021...t\u22121)\n)2\n7: Update actor weights \u03b8 using the following gradient estimate\n\u0302dV (X,Y ) d\u03b8 = T\u2211 t=1 \u2211 a\u2208A dp(a|Y\u03021...t\u22121, X) d\u03b8 Q\u0302(a; Y\u03021...t\u22121, Y )\n+ \u03bbLL T\u2211 t=1 dp(yt|Y1...t\u22121, X) d\u03b8\n8: Update delayed actor and target critic, with constants \u03b3\u03b8 1, \u03b3\u03c6 1\n\u03b8\u2032 = \u03b3\u03b8\u03b8 + (1\u2212 \u03b3\u03b8)\u03b8\u2032, \u03c6\u2032 = \u03b3\u03c6\u03c6+ (1\u2212 \u03b3\u03c6)\u03c6\u2032\n9: end while\nAlgorithm 2 Complete Actor-Critic Algorithm for Sequence Prediction 1: Initialize critic Q\u0302(a; Y\u03021...t, Y ) and actor p(a|Y\u03021...t, X) with random weights \u03c6 and \u03b8 respectively.\n2: Pre-train the actor to predict yt+1 given Y1...t by maximizing log p(yt+1|Y1...t, X). 3: Pre-train the critic to estimate Q by running Algorithm 1 with fixed actor. 4: Run Algorithm 1."}, {"heading": "3 ACTOR-CRITIC FOR SEQUENCE PREDICTION", "text": "Let \u03b8 be the parameters of the conditioned RNN, which we will also refer to as the actor. Our training algorithm is based on the following way of rewriting the gradient of the expected return dVd\u03b8 :\ndV d\u03b8 = E Y\u0302\u223cp(Y\u0302 |X) T\u2211 t=1 \u2211 a\u2208A dp(a|Y\u03021...t\u22121) d\u03b8 Q(a; Y\u03021...t\u22121). (7)\nThis equality is known in RL under the names policy gradient theorem (Sutton et al., 1999) and stochastic actor-critic (Sutton, 1984). 1 Note that we use the probability rather than the log probability in this formula (which is more typical in RL applications) as we are summing over actions rather than taking an expectation. Intuitively, this equality corresponds to increasing the probability of actions that give high values, and decreasing the probability of actions that give low values. Since this gradient expression is an expectation, it is trivial to build an unbiased estimate for it:\nd\u0302V d\u03b8 = M\u2211 k=1 T\u2211 t=1 \u2211 a\u2208A dp(a|Y\u0302 k1...t\u22121) d\u03b8 Q(a; Y\u0302 k1...t\u22121) (8)\nwhere Y\u0302 k are M random samples from p(Y\u0302 ). By replacing Q with a parameteric estimate Q\u0302 one can obtain a biased estimate with relatively low variance. The parameteric estimate Q\u0302 is called the critic.\nThe above formula is similar in spirit to the REINFORCE learning rule that Ranzato et al. (2015) use in the same context:\nd\u0302V d\u03b8 = M\u2211 k=1 T\u2211 t=1 d log p(y\u0302kt |Y\u0302 k1...t\u22121) d\u03b8 [ T\u2211 \u03c4=t r\u03c4 (y\u0302 k \u03c4 ; Y\u0302 k 1...\u03c4\u22121)\u2212 bt(X) ] , (9)\nwhere the scalar bt(X) is called baseline or control variate. The difference is that in REINFORCE the inner sum over all actions is replaced by its 1-sample estimate, namely d log p(y\u0302t|Y\u03021...t\u22121)\nd\u03b8 Q(y\u0302t; Y\u03021...t\u22121), where the log probability d log p(y\u0302t|...) d\u03b8 = 1 p(y\u0302t|...) dp(y\u0302t|...) d\u03b8 is intro-\nduced to correct for the sampling of y\u0302t. Furthermore, instead of the value Q(y\u0302t; Y\u03021...t\u22121), REINFORCE uses the cumulative reward \u2211T \u03c4=t r\u03c4 (y\u0302\u03c4 ; Y\u03021...\u03c4\u22121) following the action y\u0302t, which again can be seen as a 1-sample estimate of Q. Due to these simplifications and the potential high variance in the cumulative reward, the REINFORCE gradient estimator has very high variance. In order to improve upon it, we consider the actor-critic estimate from Equation 8, which has a lower variance at the cost of significant bias, since the critic is not perfect and trained simultaneously with the actor. The success depends on our ability to control the bias by designing the critic network and using an appropriate training criterion for it.\nTo implement the critic, we propose to use a separate RNN parameterized by \u03c6. The critic RNN is run in parallel with the actor, consumes the tokens y\u0302t that the actor outputs and produces the estimates Q\u0302(a; Y\u03021...t) for all a \u2208 A. A key difference between the critic and the actor is that the correct answer Y is given to the critic as an input, similarly to how the actor is conditioned on X . Indeed, the return R(Y\u0302 , Y ) is a deterministic function of Y , and we argue that using Y to compute Q\u0302 should be of great help. We can do this because the values are only required during training and we do not use the critic at test time. We also experimented with providing the actor states st as additional inputs to the critic. See Figure 1 for a visual representation of our actor-critic architecture.\nTemporal-difference learning A crucial component of our approach is policy evaluation, that is the training of the critic to produce useful estimates of Q\u0302. With a na\u0131\u0308ve Monte-Carlo method, one could use the future return \u2211T \u03c4=t r\u03c4 (y\u0302\u03c4 ; Y\u03021...\u03c4\u22121) as a target to Q\u0302(y\u0302t; Y\u03021...t\u22121), and use the critic parameters \u03c6 to minimize the square error between these two values. However, like with REINFORCE, using such a target yields to very high variance which quickly grows with the number of steps T . We use a temporal difference (TD) method for policy evaluation (Sutton, 1988). Namely, we use the right-hand side qt = rt(y\u0302t; Y\u03021...t\u22121) + \u2211 a\u2208A p(a|Y\u03021...t)Q\u0302(a; Y\u03021...t) of the Bellman equation as the target for the left-hand Q\u0302(y\u0302t; Y\u03021...t\u22121). 1We also provide a simple self-contained proof of Equation (7) in Supplementary Material.\nApplying deep RL techniques It has been shown in the RL literature that if Q\u0302 is non-linear (like in our case), the TD policy evaluation might diverge (Tsitsiklis & Van Roy, 1997). Previous work has shown that this problem can be alleviated by using an additional target network Q\u0302\u2032 to compute qt, which is updated less often and/or more slowly than Q\u0302. Similarly to (Lillicrap et al., 2015), we update the parameters \u03c6\u2032 of the target critic by linearly interpolating them with the parameters of the trained one. Attempts to remove the target network by propagating the gradient through qt resulted in a lower square error (Q\u0302(y\u0302t; Y\u03021...T ) \u2212 qt)2, but the resulting Q\u0302 values proved very unreliable as training signals for the actor.\nThe fact that both actor and critic use outputs of each other for training creates a potentially dangerous feedback loop. To address this, we sample predictions from a delayed actor (Lillicrap et al., 2015), whose weights are slowly updated to follow the actor that is actually trained.\nDealing with large action spaces One of the challenges of our work is that the action space is very large (as is typically the case in NLP tasks with large vocabularies). This can be alleviated by putting constraints on the critic values for actions that are rarely sampled. We found experimentally that shrinking the values of these rare actions is necessary for the algorithm to converge. Specifically, we add a term Ct for every step t to the critic\u2019s optimization objective which drives all value predictions of the critic closer to their mean:\nCt = \u2211 a\n( Q\u0302(a; Y\u03021...t\u22121)\u2212 1\n|A| \u2211 b Q\u0302(b; Y\u03021...t\u22121)\n)2 (10)\nThis corresponds to penalizing the variance of the outputs of the critic. Without this penalty the values of rare actions can be severely overestimated, which biases the gradient estimates and can cause divergence. A similar trick was used in the context of learning simple algorithms with Q-learning (Zaremba et al., 2015).\nReward shaping While we are ultimately interested in the maximization of the score of a complete prediction, simply awarding this score at the last step provides a very sparse training signal for the critic. For this reason we use potential-based reward shaping with potentials \u03a6(Y\u03021...t) = R(Y\u03021...t) for incomplete sequences and \u03a6(Y\u0302 ) = 0 for complete ones (Ng et al., 1999). Namely, for a predicted sequence Y\u0302 we compute score values for all prefixes to obtain the sequence of scores (R(Y\u03021...1), R(Y\u03021...2), . . . , R(Y\u03021...T )). The difference between the consecutive pairs of scores is then used as the reward at each step: rt(y\u0302t; Y\u03021...t\u22121) = R(Y\u03021...t)\u2212R(Y\u03021...t\u22121). Using the shaped reward rt instead of awarding the whole score R at the last step does not change the optimal policy (Ng et al., 1999).\nPutting it all together Algorithm 1 describes the proposed method in detail. We consider adding the weighted log-likelihood gradient to the actor\u2019s gradient estimate. This is in line with the prior work\nby (Ranzato et al., 2015) and (Shen et al., 2015). It is also motivated by our preliminary experiments that showed that using the actor-critic estimate alone can lead to an early determinization of the policy and vanishing gradients (also discussed in Section 6). Starting training with a randomly initialized actor and critic would be problematic, because neither the actor nor the critic would provide adequate training signals for one another. The actor would sample completely random predictions that receive very little reward, thus providing a very weak training signal for the critic. A random critic would be similarly useless for training the actor. Motivated by these considerations, we pre-train the actor using standard log-likelihood training. Furthermore, we pre-train the critic by feeding it samples from the pre-trained actor, while the actor\u2019s parameters are frozen. The complete training procedure including pre-training is described by Algorithm 2."}, {"heading": "4 RELATED WORK", "text": "In other recent RL-inspired work on sequence prediction, Ranzato et al. (2015) trained a translation model by gradually transitioning from maximum likelihood learning into optimizing BLEU or ROUGE scores using the REINFORCE algorithm. However, REINFORCE is known to have very high variance and does not exploit the availability of the ground-truth like the critic network does. The approach also relies on a curriculum learning scheme. Standard value-based RL algorithms like SARSA and OLPOMDP have also been applied to structured prediction (Maes et al., 2009). Again, these systems do not use the ground-truth for value prediction.\nImitation learning has also been applied to structured prediction (Vlachos, 2012). Methods of this type include the SEARN (Daume\u0301 Iii et al., 2009) and DAGGER (Ross et al., 2010) algorithms. These methods rely on an expert policy to provide action sequences that the policy learns to imitate. Unfortunately, it\u2019s not always easy or even possible to construct an expert policy for a task-specific score. In our approach, the critic plays a role that is similar to the expert policy, but is learned without requiring prior knowledge about the task-specific score. The recently proposed \u2018scheduled sampling\u2019 (Bengio et al., 2015) can also be seen as imitation learning. In this method, ground-truth tokens are occasionally replaced by samples from the model itself during training. A limitation is that the token k for the ground-truth answer is used as the target at step k, which might not always be the optimal strategy.\nThere are also approaches that aim to approximate the gradient of the expected score. One such approach is \u2018Direct Loss Minimization\u2019 (Hazan et al., 2010) in which the inference procedure is adapted to take both the model likelihood and task-specific score into account. Another popular approach is to replace the domain over which the task score expectation is defined with a small subset of it, as is done in Minimum (Bayes) Risk Training (Goel & Byrne, 2000; Shen et al., 2015; Och, 2003). This small subset is typically an n-best list or a sample (like in REINFORCE) that may or may not include the ground-truth as well. None of these methods provide intermediate targets for the actor during training, and Shen et al. (2015) report that as many as 100 samples were required for the best results.\nAnother recently proposed method is to optimize a global sequence cost with respect to the selection and pruning behavior of the beam search procedure itself (Wiseman & Rush, 2016). This method follows the more general strategy called \u2018learning as search optimization\u2019 (Daume\u0301 III & Marcu, 2005). This is an interesting alternative to our approach; however, it is designed specifically for the precise inference procedure involved."}, {"heading": "5 EXPERIMENTS", "text": "To validate our approach, we performed two sets of experiments 2. First, we trained the proposed model to recover strings of natural text from their corrupted versions. Specifically, we consider each character in a natural language corpus and with some probability replace it with a random character. We call this synthetic task spelling correction. A desirable property of this synthetic task is that data is essentially infinite and overfitting is no concern. Our second series of experiments is done on the task of automatic machine translation using different models and datasets.\n2 The source code is available at https://github.com/rizar/actor-critic-public\nIn addition to maximum likelihood and actor-critic training we implemented two versions of the REINFORCE gradient estimator. In the first version, we use a linear baseline network that takes the actor states as input, exactly as in (Ranzato et al., 2015). We also propose a novel extension of REINFORCE that leverages the extra information available in the ground-truth output Y . Specifically, we use the Q\u0302 estimates produced by the critic network as the baseline for the REINFORCE algorithm. The motivation behind this approach is that using the ground-truth output should produce a better baseline that lowers the variance of REINFORCE, resulting in higher task-specific scores. We refer to this method as REINFORCE-critic."}, {"heading": "5.1 SPELLING CORRECTION", "text": "We use text from the One Billion Word dataset for the spelling correction task (Chelba et al., 2013), which has pre-defined training and testing sets. The training data was abundant, and we never used any example twice. We evaluate trained models on a section of the test data that comprises 6075 sentences. To speed up experiments, we clipped all sentences to the first 10 or 30 characters.\nFor the spelling correction actor network, we use an RNN with 100 Gated Recurrent Units (GRU) and a bidirectional GRU network for the encoder. We use the same attention mechanism as proposed in (Bahdanau et al., 2015), which effectively makes our actor network a smaller version of the model used in that work. For the critic network, we employed a model with the same architecture as the actor.\nWe use character error rate (CER) to measure performance on the spelling task, which we define as the ratio between the total of Levenshtein distances between predictions and ground-truth outputs and the total length of the ground-truth outputs. This is a corpus-level metric for which a lower value is better. We use it as the return by negating per-sentence ratios. At the evaluation time greedy search is used to extract predictions from the model.\nWe use the ADAM optimizer (Kingma & Ba, 2015) to train all the networks with the parameters recommended in the original paper, with the exception of the scale parameter \u03b1. The latter is first set to 10\u22123 and then annealed to 10\u22124 for log-likelihood training. For the pre-training stage of the actor-critic, we use \u03b1 = 10\u22123 and decrease it to 10\u22124 for the joint actor-critic training. We pretrain the actor until its score on the development set stops improving. We pretrain the critic until its TD error stabilizes3. We used M = 1 sample for both actor-critic and REINFORCE. For exact hyperparameter settings we refer the reader to Appendix A.\nWe start REINFORCE training from a pretrained actor, but we do not use the curriculum learning employed in MIXER. The critic is trained in the same way for both REINFORCE and actorcritic, including the pretraining stage. We report results obtained with the reward shaping described in Section 3, as we found that it slightly improves REINFORCE performance.\nTable 1 presents our results on the spelling correction task. We observe an improvement in CER over log-likelihood training for all four settings considered. Without simultaneous loglikelihood training, actor-critic training results in a better CER than REINFORCE-critic in three\n3A typical behaviour for TD error was to grow at first and then start decreasing slowly. We found that stopping pretraining shortly after TD error stops growing leads to good results.\nout of four settings. In the fourth case, actor-critic and REINFORCE-critic have similar performance. Adding the log-likelihood gradient with a cofficient \u03bbLL = 0.1 helps both of the methods, but actor-critic still retains a margin of improvement over REINFORCE-critic."}, {"heading": "5.2 MACHINE TRANSLATION", "text": "For our first translation experiment, we use data from the German-English machine translation track of the IWSLT 2014 evaluation campaign (Cettolo et al., 2014), as used in Ranzato et al. (2015), and closely follow the pre-processing described in that work. The training data comprises about 153,000 German-English sentence pairs. In addition we considered a larger WMT14 English-French dataset Cho et al. (2014) with more than 12 million examples. For further information about the data we refer the reader to Appendix B.\nThe return is defined as a smoothed and rescaled version of the BLEU score. Specifically, we start all n-gram counts from 1 instead of 0, and multiply the resulting score by the length of the ground-truth translation. Smoothing is a common practice when sentence-level BLEU score is considered, and it has been used to apply REINFORCE in similar settings (Ranzato et al., 2015).\nIWSLT 2014 with a convolutional encoder In our first experiment we use a convolutional encoder in the actor to make our results more comparable with Ranzato et al. (2015). For the same reason, we use 256 hidden units in the networks. For the critic, we replaced the convolutional network with a bidirectional GRU network. For training this model we mostly used the same hyperparameter values as in the spelling correction experiments, with a few differences highlighted in Appendix A. For decoding we used greedy search and beam search with a beam size of 10. We found that penalizing candidate sentences that are too short was required to obtain the best results. Similarly to (Hannun et al., 2014), we subtracted \u03c1T from the negative log-likelihood of each candidate sentence, where T is the candidate\u2019s length, and \u03c1 is a hyperparameter tuned on the validation set.\nThe results are summarized in Table 2. We report a significant improvement of 2.3 BLEU points over the log-likelihood baseline when greedy search is used for decoding. Surprisingly, the best performing method is REINFORCE with critic, with an additional 0.6 BLEU point advantage over the actor-critic. When beam-search is used, the ranking of the compared approaches is the same, but the margin between the proposed methods and log-likelihood training becomes smaller. The final performances of the actor-critic and the REINFORCE-critic with greedy search are also 0.7 and 1.3 BLEU points respectively better than what Ranzato et al. (2015) report for their MIXER approach. This comparison should be treated with caution, because our log-likelihood baseline is 1.6 BLEU\npoints stronger than its equivalent from (Ranzato et al., 2015). The performance of REINFORCE with a simple baseline matches the score reported for MIXER in Ranzato et al. (2015).\nTo better understand the IWSLT 2014 results we provide the learning curves for the considered approaches in Figure 2. We can clearly see that the training methods that use generated predictions have a strong regularization effect \u2014 that is, better progress on the validation set in exchange for slower or negative progress on the training set. The effect is stronger for both REINFORCE varieties, especially for the one without a critic. The actor-critic training does a much better job of fitting the training set than REINFORCE and is the only method except log-likelihood that shows a clear overfitting, which is a healthy behaviour for such a small dataset.\nIn addition, we performed an ablation study. We found that using a target network was crucial; while the joint actor-critic training was still progressing with \u03b3\u03b8 = 0.1, with \u03b3\u03b8 = 1.0 it did not work at all. Similarly important was the value penalty described in Equation (10). We found that good values of the \u03bb coefficient were in the range [10\u22123, 10\u22126]. Other techniques, such as reward shaping and a delayed actor, brought moderate performance gains. We refer the reader to Appendix A for more details.\nIWSLT 2014 with a bidirectional GRU encoder In order to compare our results with those reported by Wiseman & Rush (2016) we repeated our IWSLT 2014 investigation with a different encoder, a bidirectional RNN with 256 GRU units. In this round of experiments we also tried to used combined training objectives in the same way as in our spelling correction experiments. The results are summarized in Table 3. One can see that the actor-critic training, especially its AC+LL version, yields significant improvements (1.7 with greedy search and 1.0 with beam search) upon the pure log-likelihood training, which are comparable to those brought by Beam Search Optimization (BSO), even though our log-likelihood baseline is much stronger. In this round of experiments actor-critic and REINFORCE-critic performed on par.\nWMT 14 Finally we report our results on a very popular large WMT14 English-French dataset (Cho et al., 2014) in Table 4. Our model closely follows the achitecture from (Bahdanau et al., 2015), however we achieved a higher baseline performance by annealing the learning rate \u03b1 and penalizing output sequences that were too short during beam search. The actor-critic training brings a significant 1.5 BLEU improvement with greedy search and a noticeable 0.4 BLEU improvement with beam search. In previous work Shen et al. (2015) report a higher improvement of 1.4 BLEU with beam search, however they use 100 samples for each training example, whereas we use just one. We note that in this experiment, which is perhaps the most realistic settings, the actor-critic enjoys a significant advantage over the REINFORCE-critic."}, {"heading": "6 DISCUSSION", "text": "We proposed an actor-critic approach to sequence prediction. Our method takes the task objective into account during training and uses the ground-truth output to aid the critic in its prediction of intermediate targets for the actor. We showed that our method leads to significant improvements over maximum likelihood training on both a synthetic task and a machine translation benchmark. Compared to REINFORCE training on machine translation, actor-critic fits the training data much faster, although in some of our experiments we were able to significantly reduce the gap in the training speed and achieve a better test error using our critic network as the baseline for REINFORCE.\nOne interesting observation we made from the machine translation results is that the training methods that use generated predictions have a strong regularization effect. Our understanding is that conditioning on the sampled outputs effectively increases the diversity of training data. This phenomenon makes it harder to judge whether the actor-critic training meets our expectations, because a noisier gradient estimate yielded a better test set performance. We argue that the spelling correction results obtained on a virtually infinite dataset in conjuction with better machine translation performance on the large WMT 14 dataset provide convincing evidence that the actor-training can be effective. In future work we will consider larger machine translation datasets.\nWe ran into several optimization issues. The critic would sometimes assign very high values to actions with a very low probability according to the actor. We were able to resolve this by penalizing the critic\u2019s variance. Additionally, the actor would sometimes have trouble to adapt to the demands of the critic. We noticed that the action distribution tends to saturate and become deterministic, causing the gradient to vanish. We found that combining an RL training objective with log-likelihood can help, but in general we think this issue deserves further investigation. For example, one can look for suitable training criteria that have a well-behaved gradient even when the policy has little or no stochasticity.\nIn a concurrent work Wu et al. (2016) show that a version of REINFORCE with the baseline computed using multiple samples can improve performance of a very strong machine translation system. This result, and our REINFORCE-critic experiments, suggest that often the variance of REINFORCE can be reduced enough to make its application practical. That said, we would like to emphasize that this paper attacks the problem of gradient estimation from a very different angle as it aims for low-variance but potentially high-bias estimates. The idea of using the ground-truth output that we proposed is an absolutely necessary first step in this direction. Future work could focus on further reducing the bias of the actor-critic estimate, for example, by using a multi-sample training criterion for the critic."}, {"heading": "ACKNOWLEDGMENTS", "text": "We thank the developers of Theano (Theano Development Team, 2016) and Blocks (van Merrie\u0308nboer et al., 2015) for their great work. We thank NSERC, Compute Canada, Calcul Quebe\u0301c, Canada Research Chairs, CIFAR, CHISTERA project M2CR (PCIN-2015-226) and Samsung Institute of Advanced Techonology for their financial support."}, {"heading": "A HYPERPARAMETERS", "text": "For machine translation experiments the variance penalty coefficient \u03bb was set to 10\u22124, and the delay coefficients \u03b3\u03b8 and \u03b3\u03c6 were both set to 10\u22124. For REINFORCE with the critic we did not use a delayed actor, i.e. \u03b3\u03b8 was set to 1. For the spelling correction task we used the same \u03b3\u03b8 and \u03b3\u03c6 but a different \u03bb = 10\u22123. When we used a combined training criterion, the weight of the log-likelihood gradient \u03bbLL was always 0.1. All initial weights were sampled from a centered uniform distribution with width 0.1.\nIn some of our experiments we provided the actor states as additional inputs to the critic. Specifically, we did so in our spelling correction experiments and in our WMT 14 machine translation study. All the other results were obtained without this technique.\nFor decoding with beam search we substracted the length of a candidate times \u03c1 from the loglikelihood cost. The exact value of \u03c1 was selected on the validation set and was equal to 0.8 for models trained by log-likelihood and REINFORCE and to 1.0 for models trained by actor-critic and REINFORCE-critic.\nFor some of the hyperparameters we performed an ablation study. The results are reported in Table 5."}, {"heading": "B DATA", "text": "For the IWSLT 2014 data the sizes of validation and tests set were 6,969 and 6,750, respectively. We limited the number of words in the English and German vocabularies to the 22,822 and 32,009 most frequent words, respectively, and replaced all other words with a special token. The maximum sentence length in our dataset was 50. For WMT14 we used vocabularies of 30,000 words for both English and French, and the maximum sentence length was also 50."}, {"heading": "C GENERATED Q-VALUES", "text": "In Table C we provide an example of value predictions that the critic outputs for candidate next words. One can see that the critic has indeed learnt to assign larger values for the appropriate next words. While the critic does not always produce sensible estimates and can often predict a high return for irrelevant rare words, this is greatly reduced using the variance penalty term from Equation (10).\nD PROOF OF EQUATION (7)\ndV d\u03b8 = d d\u03b8 E Y\u0302\u223cp(Y\u0302 ) R(Y\u0302 ) = \u2211 Y\u0302 d d\u03b8 [p(y\u03021)p(y\u03022|y\u03021) . . . p(y\u0302T |y\u03021 . . . y\u0302T\u22121)]R(Y\u0302 ) =\nT\u2211 t=1 \u2211 Y\u0302 p(Y\u03021...t\u22121) dp(y\u0302t|Y\u03021...t\u22121) d\u03b8 p(Y\u0302t+1..T |Y\u03021...t)R(Y\u0302 ) =\nT\u2211 t=1 \u2211 Y\u03021...t p(Y\u03021...t\u22121) dp(y\u0302t|Y\u03021...t\u22121) d\u03b8 \u2211 Y\u0302t+1...T p(Y\u0302t+1..T |Y\u03021...t) T\u2211 \u03c4=1 r\u03c4 (y\u0302\u03c4 ; Y\u03021...\u03c4\u22121) =\nT\u2211 t=1 \u2211 Y\u03021...t p(Y\u03021...t\u22121) dp(y\u0302t|Y\u03021...t\u22121)\nd\u03b8rt(y\u0302t; Y\u03021...t\u22121) + \u2211 Y\u0302t+1...T p(Y\u0302t+1..T |Y\u03021...t) T\u2211 \u03c4=t+1 r\u03c4 (y\u0302\u03c4 ; Y\u03021...\u03c4\u22121)  = T\u2211 t=1 E Y\u03021...t\u22121\u223cp(Y\u03021...t\u22121) \u2211 a\u2208A dp(a|Y\u03021...t\u22121) d\u03b8 Q(a; Y\u03021...t\u22121) =\nE Y\u0302\u223cp(Y\u0302 ) T\u2211 t=1 \u2211 a\u2208A dp(a|Y\u03021...t\u22121) d\u03b8 Q(a; Y\u03021...t\u22121)"}], "references": [{"title": "Neural machine translation by jointly learning to align and translate", "author": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio"], "venue": "In Proceedings of the ICLR 2015,", "citeRegEx": "Bahdanau et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2015}, {"title": "Neuronlike adaptive elements that can solve difficult learning control problems", "author": ["Andrew G Barto", "Richard S Sutton", "Charles W Anderson"], "venue": "Systems, Man and Cybernetics, IEEE Transactions on,", "citeRegEx": "Barto et al\\.,? \\Q1983\\E", "shortCiteRegEx": "Barto et al\\.", "year": 1983}, {"title": "Scheduled sampling for sequence prediction with recurrent neural networks", "author": ["Samy Bengio", "Oriol Vinyals", "Navdeep Jaitly", "Noam Shazeer"], "venue": "arXiv preprint arXiv:1506.03099,", "citeRegEx": "Bengio et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Bengio et al\\.", "year": 2015}, {"title": "Report on the 11th iwslt evaluation campaign", "author": ["Mauro Cettolo", "Jan Niehues", "Sebastian St\u00fcker", "Luisa Bentivogli", "Marcello Federico"], "venue": "In Proc. of IWSLT,", "citeRegEx": "Cettolo et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Cettolo et al\\.", "year": 2014}, {"title": "Listen, attend and spell", "author": ["William Chan", "Navdeep Jaitly", "Quoc V Le", "Oriol Vinyals"], "venue": "arXiv preprint arXiv:1508.01211,", "citeRegEx": "Chan et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Chan et al\\.", "year": 2015}, {"title": "One billion word benchmark for measuring progress in statistical language modeling", "author": ["Ciprian Chelba", "Tomas Mikolov", "Mike Schuster", "Qi Ge", "Thorsten Brants", "Phillipp Koehn", "Tony Robinson"], "venue": "arXiv preprint arXiv:1312.3005,", "citeRegEx": "Chelba et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Chelba et al\\.", "year": 2013}, {"title": "Learning phrase representations using rnn encoder-decoder for statistical machine translation", "author": ["Kyunghyun Cho", "Bart Van Merri\u00ebnboer", "Caglar Gulcehre", "Dzmitry Bahdanau", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio"], "venue": "arXiv preprint arXiv:1406.1078,", "citeRegEx": "Cho et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Cho et al\\.", "year": 2014}, {"title": "Attention-based models for speech recognition", "author": ["Jan Chorowski", "Dzmitry Bahdanau", "Dmitriy Serdyuk", "KyungHyun Cho", "Yoshua Bengio"], "venue": "CoRR, abs/1506.07503,", "citeRegEx": "Chorowski et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Chorowski et al\\.", "year": 2015}, {"title": "Learning as search optimization: Approximate large margin methods for structured prediction", "author": ["Hal Daum\u00e9 III", "Daniel Marcu"], "venue": "In Proceedings of the 22nd international conference on Machine learning,", "citeRegEx": "III and Marcu.,? \\Q2005\\E", "shortCiteRegEx": "III and Marcu.", "year": 2005}, {"title": "Search-based structured prediction", "author": ["Hal Daum\u00e9 Iii", "John Langford", "Daniel Marcu"], "venue": "Machine learning,", "citeRegEx": "Iii et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Iii et al\\.", "year": 2009}, {"title": "Long-term recurrent convolutional networks for visual recognition and description", "author": ["Jeffrey Donahue", "Lisa Anne Hendricks", "Sergio Guadarrama", "Marcus Rohrbach", "Subhashini Venugopalan", "Kate Saenko", "Trevor Darrell"], "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,", "citeRegEx": "Donahue et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Donahue et al\\.", "year": 2015}, {"title": "Minimum bayes-risk automatic speech recognition", "author": ["Vaibhava Goel", "William J Byrne"], "venue": "Computer Speech & Language,", "citeRegEx": "Goel and Byrne.,? \\Q2000\\E", "shortCiteRegEx": "Goel and Byrne.", "year": 2000}, {"title": "First-pass large vocabulary continuous speech recognition using bi-directional recurrent dnns", "author": ["Awni Y Hannun", "Andrew L Maas", "Daniel Jurafsky", "Andrew Y Ng"], "venue": "arXiv preprint arXiv:1408.2873,", "citeRegEx": "Hannun et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Hannun et al\\.", "year": 2014}, {"title": "Direct loss minimization for structured prediction", "author": ["Tamir Hazan", "Joseph Keshet", "David A McAllester"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Hazan et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Hazan et al\\.", "year": 2010}, {"title": "Long short-term memory", "author": ["Sepp Hochreiter", "J\u00fcrgen Schmidhuber"], "venue": "Neural computation,", "citeRegEx": "Hochreiter and Schmidhuber.,? \\Q1997\\E", "shortCiteRegEx": "Hochreiter and Schmidhuber.", "year": 1997}, {"title": "Deep visual-semantic alignments for generating image descriptions", "author": ["Andrej Karpathy", "Li Fei-Fei"], "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,", "citeRegEx": "Karpathy and Fei.Fei.,? \\Q2015\\E", "shortCiteRegEx": "Karpathy and Fei.Fei.", "year": 2015}, {"title": "A method for stochastic optimization", "author": ["Diederik P Kingma", "Jimmy Ba"], "venue": "In International Conference on Learning Representation,", "citeRegEx": "Kingma and Ba.,? \\Q2015\\E", "shortCiteRegEx": "Kingma and Ba.", "year": 2015}, {"title": "Unifying visual-semantic embeddings with multimodal neural language models", "author": ["Ryan Kiros", "Ruslan Salakhutdinov", "Richard S Zemel"], "venue": "arXiv preprint arXiv:1411.2539,", "citeRegEx": "Kiros et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Kiros et al\\.", "year": 2014}, {"title": "Continuous control with deep reinforcement learning", "author": ["Timothy P Lillicrap", "Jonathan J Hunt", "Alexander Pritzel", "Nicolas Heess", "Tom Erez", "Yuval Tassa", "David Silver", "Daan Wierstra"], "venue": "arXiv preprint arXiv:1509.02971,", "citeRegEx": "Lillicrap et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Lillicrap et al\\.", "year": 2015}, {"title": "Automatic evaluation of summaries using n-gram co-occurrence statistics", "author": ["Chin-Yew Lin", "Eduard Hovy"], "venue": "In Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology-Volume", "citeRegEx": "Lin and Hovy.,? \\Q2003\\E", "shortCiteRegEx": "Lin and Hovy.", "year": 2003}, {"title": "Structured prediction with reinforcement learning", "author": ["Francis Maes", "Ludovic Denoyer", "Patrick Gallinari"], "venue": "Machine learning,", "citeRegEx": "Maes et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Maes et al\\.", "year": 2009}, {"title": "Neural networks for control", "author": ["W Thomas Miller", "Paul J Werbos", "Richard S Sutton"], "venue": "MIT press,", "citeRegEx": "Miller et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Miller et al\\.", "year": 1995}, {"title": "Human-level control through deep reinforcement learning", "author": ["Volodymyr Mnih", "Koray Kavukcuoglu", "David Silver", "Andrei A Rusu", "Joel Veness", "Marc G Bellemare", "Alex Graves", "Martin Riedmiller", "Andreas K Fidjeland", "Georg Ostrovski"], "venue": "Nature, 518(7540):529\u2013533,", "citeRegEx": "Mnih et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Mnih et al\\.", "year": 2015}, {"title": "Policy invariance under reward transformations: Theory and application to reward shaping", "author": ["Andrew Y Ng", "Daishi Harada", "Stuart Russell"], "venue": "In ICML,", "citeRegEx": "Ng et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Ng et al\\.", "year": 1999}, {"title": "Minimum error rate training in statistical machine translation", "author": ["Franz Josef Och"], "venue": "In Proceedings of the 41st Annual Meeting on Association for Computational Linguistics-Volume", "citeRegEx": "Och.,? \\Q2003\\E", "shortCiteRegEx": "Och.", "year": 2003}, {"title": "Bleu: a method for automatic evaluation of machine translation", "author": ["Kishore Papineni", "Salim Roukos", "Todd Ward", "Wei-Jing Zhu"], "venue": "In Proceedings of the 40th annual meeting on association for computational linguistics,", "citeRegEx": "Papineni et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Papineni et al\\.", "year": 2002}, {"title": "Sequence level training with recurrent neural networks", "author": ["Marc\u2019Aurelio Ranzato", "Sumit Chopra", "Michael Auli", "Wojciech Zaremba"], "venue": "arXiv preprint arXiv:1511.06732,", "citeRegEx": "Ranzato et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ranzato et al\\.", "year": 2015}, {"title": "A reduction of imitation learning and structured prediction to no-regret online learning", "author": ["St\u00e9phane Ross", "Geoffrey J Gordon", "J Andrew Bagnell"], "venue": "arXiv preprint arXiv:1011.0686,", "citeRegEx": "Ross et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Ross et al\\.", "year": 2010}, {"title": "A neural attention model for abstractive sentence summarization", "author": ["Alexander M Rush", "Sumit Chopra", "Jason Weston"], "venue": "arXiv preprint arXiv:1509.00685,", "citeRegEx": "Rush et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Rush et al\\.", "year": 2015}, {"title": "Bidirectional recurrent neural networks", "author": ["Mike Schuster", "Kuldip K Paliwal"], "venue": "Signal Processing, IEEE Transactions on,", "citeRegEx": "Schuster and Paliwal.,? \\Q1997\\E", "shortCiteRegEx": "Schuster and Paliwal.", "year": 1997}, {"title": "Minimum risk training for neural machine translation", "author": ["Shiqi Shen", "Yong Cheng", "Zhongjun He", "Wei He", "Hua Wu", "Maosong Sun", "Yang Liu"], "venue": "arXiv preprint arXiv:1512.02433,", "citeRegEx": "Shen et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Shen et al\\.", "year": 2015}, {"title": "Sequence to sequence learning with neural networks. In Advances in Neural Information Processing Systems", "author": ["Ilya Sutskever", "Oriol Vinyals", "Quoc V. Le"], "venue": "Annual Conference on Neural Information Processing Systems", "citeRegEx": "Sutskever et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Sutskever et al\\.", "year": 2014}, {"title": "Learning to predict by the methods of temporal differences", "author": ["Richard S Sutton"], "venue": "Machine learning,", "citeRegEx": "Sutton.,? \\Q1988\\E", "shortCiteRegEx": "Sutton.", "year": 1988}, {"title": "Introduction to reinforcement learning, volume 135", "author": ["Richard S Sutton", "Andrew G Barto"], "venue": null, "citeRegEx": "Sutton and Barto.,? \\Q1998\\E", "shortCiteRegEx": "Sutton and Barto.", "year": 1998}, {"title": "Policy gradient methods for reinforcement learning with function approximation", "author": ["Richard S Sutton", "David A McAllester", "Satinder P Singh", "Yishay Mansour"], "venue": "In NIPS,", "citeRegEx": "Sutton et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Sutton et al\\.", "year": 1999}, {"title": "Temporal credit assignment in reinforcement learning", "author": ["Richard Stuart Sutton"], "venue": null, "citeRegEx": "Sutton.,? \\Q1984\\E", "shortCiteRegEx": "Sutton.", "year": 1984}, {"title": "Td-gammon, a self-teaching backgammon program, achieves master-level play", "author": ["Gerald Tesauro"], "venue": "Neural computation,", "citeRegEx": "Tesauro.,? \\Q1994\\E", "shortCiteRegEx": "Tesauro.", "year": 1994}, {"title": "An analysis of temporal-difference learning with function approximation", "author": ["John N Tsitsiklis", "Benjamin Van Roy"], "venue": "Automatic Control, IEEE Transactions on,", "citeRegEx": "Tsitsiklis and Roy.,? \\Q1997\\E", "shortCiteRegEx": "Tsitsiklis and Roy.", "year": 1997}, {"title": "Blocks and fuel: Frameworks for deep learning", "author": ["Bart van Merri\u00ebnboer", "Dzmitry Bahdanau", "Vincent Dumoulin", "Dmitriy Serdyuk", "David WardeFarley", "Jan Chorowski", "Yoshua Bengio"], "venue": null, "citeRegEx": "Merri\u00ebnboer et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Merri\u00ebnboer et al\\.", "year": 2015}, {"title": "Show and tell: A neural image caption generator", "author": ["Oriol Vinyals", "Alexander Toshev", "Samy Bengio", "Dumitru Erhan"], "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,", "citeRegEx": "Vinyals et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Vinyals et al\\.", "year": 2015}, {"title": "An investigation of imitation learning algorithms for structured prediction", "author": ["Andreas Vlachos"], "venue": "In EWRL, pp. 143\u2013154. Citeseer,", "citeRegEx": "Vlachos.,? \\Q2012\\E", "shortCiteRegEx": "Vlachos.", "year": 2012}, {"title": "Simple statistical gradient-following algorithms for connectionist reinforcement learning", "author": ["Ronald J Williams"], "venue": "Machine learning,", "citeRegEx": "Williams.,? \\Q1992\\E", "shortCiteRegEx": "Williams.", "year": 1992}, {"title": "Sequence-to-sequence learning as beam-search optimization", "author": ["Sam Wiseman", "Alexander M Rush"], "venue": "arXiv preprint arXiv:1606.02960,", "citeRegEx": "Wiseman and Rush.,? \\Q2016\\E", "shortCiteRegEx": "Wiseman and Rush.", "year": 2016}, {"title": "Google\u2019s neural machine translation system: Bridging the gap between human and machine translation", "author": ["Yonghui Wu", "Mike Schuster", "Zhifeng Chen", "Quoc V Le", "Mohammad Norouzi", "Wolfgang Macherey", "Maxim Krikun", "Yuan Cao", "Qin Gao", "Klaus Macherey"], "venue": "arXiv preprint arXiv:1609.08144,", "citeRegEx": "Wu et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Wu et al\\.", "year": 2016}, {"title": "Show, attend and tell: Neural image caption generation with visual attention", "author": ["Kelvin Xu", "Jimmy Ba", "Ryan Kiros", "Kyunghyun Cho", "Aaron C. Courville", "Ruslan Salakhutdinov", "Richard S. Zemel", "Yoshua Bengio"], "venue": "In Proceedings of the 32nd International Conference on Machine Learning, ICML 2015,", "citeRegEx": "Xu et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Xu et al\\.", "year": 2015}, {"title": "Learning simple algorithms from examples", "author": ["Wojciech Zaremba", "Tomas Mikolov", "Armand Joulin", "Rob Fergus"], "venue": "arXiv preprint arXiv:1511.07275,", "citeRegEx": "Zaremba et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Zaremba et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 31, "context": "This approach has been applied successfully in machine translation (Sutskever et al., 2014; Bahdanau et al., 2015), caption generation (Kiros et al.", "startOffset": 67, "endOffset": 114}, {"referenceID": 0, "context": "This approach has been applied successfully in machine translation (Sutskever et al., 2014; Bahdanau et al., 2015), caption generation (Kiros et al.", "startOffset": 67, "endOffset": 114}, {"referenceID": 17, "context": ", 2015), caption generation (Kiros et al., 2014; Donahue et al., 2015; Vinyals et al., 2015; Xu et al., 2015; Karpathy & Fei-Fei, 2015), and speech recognition (Chorowski et al.", "startOffset": 28, "endOffset": 135}, {"referenceID": 10, "context": ", 2015), caption generation (Kiros et al., 2014; Donahue et al., 2015; Vinyals et al., 2015; Xu et al., 2015; Karpathy & Fei-Fei, 2015), and speech recognition (Chorowski et al.", "startOffset": 28, "endOffset": 135}, {"referenceID": 39, "context": ", 2015), caption generation (Kiros et al., 2014; Donahue et al., 2015; Vinyals et al., 2015; Xu et al., 2015; Karpathy & Fei-Fei, 2015), and speech recognition (Chorowski et al.", "startOffset": 28, "endOffset": 135}, {"referenceID": 44, "context": ", 2015), caption generation (Kiros et al., 2014; Donahue et al., 2015; Vinyals et al., 2015; Xu et al., 2015; Karpathy & Fei-Fei, 2015), and speech recognition (Chorowski et al.", "startOffset": 28, "endOffset": 135}, {"referenceID": 7, "context": ", 2015; Karpathy & Fei-Fei, 2015), and speech recognition (Chorowski et al., 2015; Chan et al., 2015).", "startOffset": 58, "endOffset": 101}, {"referenceID": 4, "context": ", 2015; Karpathy & Fei-Fei, 2015), and speech recognition (Chorowski et al., 2015; Chan et al., 2015).", "startOffset": 58, "endOffset": 101}, {"referenceID": 2, "context": "During this search, the model is conditioned on its own guesses, which may be incorrect and thus lead to a compounding of errors (Bengio et al., 2015).", "startOffset": 129, "endOffset": 150}, {"referenceID": 2, "context": "Due to this discrepancy between training and testing conditions, it has been shown that maximum likelihood training can be suboptimal (Bengio et al., 2015; Ranzato et al., 2015).", "startOffset": 134, "endOffset": 177}, {"referenceID": 26, "context": "Due to this discrepancy between training and testing conditions, it has been shown that maximum likelihood training can be suboptimal (Bengio et al., 2015; Ranzato et al., 2015).", "startOffset": 134, "endOffset": 177}, {"referenceID": 41, "context": "(2015) rely on the REINFORCE algorithm (Williams, 1992) to decide whether or not the tokens", "startOffset": 39, "endOffset": 55}, {"referenceID": 25, "context": "from a sampled prediction lead to a high task-specific score, such as BLEU (Papineni et al., 2002) or ROUGE (Lin & Hovy, 2003).", "startOffset": 75, "endOffset": 98}, {"referenceID": 35, "context": "Our approach draws inspiration and borrows the terminology from the field of reinforcement learning (RL) (Sutton & Barto, 1998), in particular from the actor-critic approach (Sutton, 1984; Sutton et al., 1999; Barto et al., 1983).", "startOffset": 174, "endOffset": 229}, {"referenceID": 34, "context": "Our approach draws inspiration and borrows the terminology from the field of reinforcement learning (RL) (Sutton & Barto, 1998), in particular from the actor-critic approach (Sutton, 1984; Sutton et al., 1999; Barto et al., 1983).", "startOffset": 174, "endOffset": 229}, {"referenceID": 1, "context": "Our approach draws inspiration and borrows the terminology from the field of reinforcement learning (RL) (Sutton & Barto, 1998), in particular from the actor-critic approach (Sutton, 1984; Sutton et al., 1999; Barto et al., 1983).", "startOffset": 174, "endOffset": 229}, {"referenceID": 32, "context": "To train the critic, we adapt the temporal difference methods from the RL literature (Sutton, 1988) to our setup.", "startOffset": 85, "endOffset": 99}, {"referenceID": 36, "context": "While RL methods with non-linear function approximators are not new (Tesauro, 1994; Miller et al., 1995), they have recently surged in popularity, giving rise to the field of \u2018deep RL\u2019 (Mnih et al.", "startOffset": 68, "endOffset": 104}, {"referenceID": 21, "context": "While RL methods with non-linear function approximators are not new (Tesauro, 1994; Miller et al., 1995), they have recently surged in popularity, giving rise to the field of \u2018deep RL\u2019 (Mnih et al.", "startOffset": 68, "endOffset": 104}, {"referenceID": 22, "context": ", 1995), they have recently surged in popularity, giving rise to the field of \u2018deep RL\u2019 (Mnih et al., 2015).", "startOffset": 88, "endOffset": 107}, {"referenceID": 6, "context": "Popular choices for the mapping f are the Long Short-Term Memory (Hochreiter & Schmidhuber, 1997) and the Gated Recurrent Units (Cho et al., 2014), the latter of which we use for our models.", "startOffset": 128, "endOffset": 146}, {"referenceID": 31, "context": "The simplest way to do this is to start with an initial state s0 = s0(X) (Sutskever et al., 2014; Cho et al., 2014).", "startOffset": 73, "endOffset": 115}, {"referenceID": 6, "context": "The simplest way to do this is to start with an initial state s0 = s0(X) (Sutskever et al., 2014; Cho et al., 2014).", "startOffset": 73, "endOffset": 115}, {"referenceID": 28, "context": "In our models, the sequence of vectors is produced by either a bidirectional RNN (Schuster & Paliwal, 1997) or a convolutional encoder (Rush et al., 2015).", "startOffset": 135, "endOffset": 154}, {"referenceID": 0, "context": "We use a soft attention mechanism (Bahdanau et al., 2015) that computes a weighted sum of a sequence of vectors.", "startOffset": 34, "endOffset": 57}, {"referenceID": 34, "context": "This equality is known in RL under the names policy gradient theorem (Sutton et al., 1999) and stochastic actor-critic (Sutton, 1984).", "startOffset": 69, "endOffset": 90}, {"referenceID": 35, "context": ", 1999) and stochastic actor-critic (Sutton, 1984).", "startOffset": 36, "endOffset": 50}, {"referenceID": 32, "context": "We use a temporal difference (TD) method for policy evaluation (Sutton, 1988).", "startOffset": 63, "endOffset": 77}, {"referenceID": 18, "context": "Similarly to (Lillicrap et al., 2015), we update the parameters \u03c6\u2032 of the target critic by linearly interpolating them with the parameters of the trained one.", "startOffset": 13, "endOffset": 37}, {"referenceID": 18, "context": "To address this, we sample predictions from a delayed actor (Lillicrap et al., 2015), whose weights are slowly updated to follow the actor that is actually trained.", "startOffset": 60, "endOffset": 84}, {"referenceID": 45, "context": "A similar trick was used in the context of learning simple algorithms with Q-learning (Zaremba et al., 2015).", "startOffset": 86, "endOffset": 108}, {"referenceID": 23, "context": "t) for incomplete sequences and \u03a6(\u0176 ) = 0 for complete ones (Ng et al., 1999).", "startOffset": 60, "endOffset": 77}, {"referenceID": 23, "context": "Using the shaped reward rt instead of awarding the whole score R at the last step does not change the optimal policy (Ng et al., 1999).", "startOffset": 117, "endOffset": 134}, {"referenceID": 20, "context": "Standard value-based RL algorithms like SARSA and OLPOMDP have also been applied to structured prediction (Maes et al., 2009).", "startOffset": 106, "endOffset": 125}, {"referenceID": 40, "context": "Imitation learning has also been applied to structured prediction (Vlachos, 2012).", "startOffset": 66, "endOffset": 81}, {"referenceID": 2, "context": "The recently proposed \u2018scheduled sampling\u2019 (Bengio et al., 2015) can also be seen as imitation learning.", "startOffset": 43, "endOffset": 64}, {"referenceID": 13, "context": "One such approach is \u2018Direct Loss Minimization\u2019 (Hazan et al., 2010) in which the inference procedure is adapted to take both the model likelihood and task-specific score into account.", "startOffset": 48, "endOffset": 68}, {"referenceID": 30, "context": "Another popular approach is to replace the domain over which the task score expectation is defined with a small subset of it, as is done in Minimum (Bayes) Risk Training (Goel & Byrne, 2000; Shen et al., 2015; Och, 2003).", "startOffset": 170, "endOffset": 220}, {"referenceID": 24, "context": "Another popular approach is to replace the domain over which the task score expectation is defined with a small subset of it, as is done in Minimum (Bayes) Risk Training (Goel & Byrne, 2000; Shen et al., 2015; Och, 2003).", "startOffset": 170, "endOffset": 220}, {"referenceID": 26, "context": "In the first version, we use a linear baseline network that takes the actor states as input, exactly as in (Ranzato et al., 2015).", "startOffset": 107, "endOffset": 129}, {"referenceID": 5, "context": "We use text from the One Billion Word dataset for the spelling correction task (Chelba et al., 2013), which has pre-defined training and testing sets.", "startOffset": 79, "endOffset": 100}, {"referenceID": 0, "context": "We use the same attention mechanism as proposed in (Bahdanau et al., 2015), which effectively makes our actor network a smaller version of the model used in that work.", "startOffset": 51, "endOffset": 74}, {"referenceID": 26, "context": "The asterisk identifies results from (Ranzato et al., 2015).", "startOffset": 37, "endOffset": 59}, {"referenceID": 26, "context": "The numbers reported with \u2264 were approximately read from Figure 6 of (Ranzato et al., 2015) Decoding method Model LL* MIXER* LL RF RF-C AC greedy search 17.", "startOffset": 69, "endOffset": 91}, {"referenceID": 3, "context": "For our first translation experiment, we use data from the German-English machine translation track of the IWSLT 2014 evaluation campaign (Cettolo et al., 2014), as used in Ranzato et al.", "startOffset": 138, "endOffset": 160}, {"referenceID": 26, "context": "Smoothing is a common practice when sentence-level BLEU score is considered, and it has been used to apply REINFORCE in similar settings (Ranzato et al., 2015).", "startOffset": 137, "endOffset": 159}, {"referenceID": 12, "context": "Similarly to (Hannun et al., 2014), we subtracted \u03c1T from the negative log-likelihood of each candidate sentence, where T is the candidate\u2019s length, and \u03c1 is a hyperparameter tuned on the validation set.", "startOffset": 13, "endOffset": 34}, {"referenceID": 0, "context": "The apostrophy and the asterisk identify results from (Bahdanau et al., 2015) and (Shen et al.", "startOffset": 54, "endOffset": 77}, {"referenceID": 26, "context": "points stronger than its equivalent from (Ranzato et al., 2015).", "startOffset": 41, "endOffset": 63}, {"referenceID": 6, "context": "WMT 14 Finally we report our results on a very popular large WMT14 English-French dataset (Cho et al., 2014) in Table 4.", "startOffset": 90, "endOffset": 108}, {"referenceID": 0, "context": "Our model closely follows the achitecture from (Bahdanau et al., 2015), however we achieved a higher baseline performance by annealing the learning rate \u03b1 and penalizing output sequences that were too short during beam search.", "startOffset": 47, "endOffset": 70}], "year": 2017, "abstractText": "We present an approach to training neural networks to generate sequences using actor-critic methods from reinforcement learning (RL). Current log-likelihood training methods are limited by the discrepancy between their training and testing modes, as models must generate tokens conditioned on their previous guesses rather than the ground-truth tokens. We address this problem by introducing a critic network that is trained to predict the value of an output token, given the policy of an actor network. This results in a training procedure that is much closer to the test phase, and allows us to directly optimize for a task-specific score such as BLEU. Crucially, since we leverage these techniques in the supervised learning setting rather than the traditional RL setting, we condition the critic network on the ground-truth output. We show that our method leads to improved performance on both a synthetic task, and for German-English machine translation. Our analysis paves the way for such methods to be applied in natural language generation tasks, such as machine translation, caption generation, and dialogue modelling.", "creator": "LaTeX with hyperref package"}, "id": "ICLR_2017_188"}