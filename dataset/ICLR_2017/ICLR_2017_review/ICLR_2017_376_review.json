{"id": "ICLR_2017_376", "reviews": [{"review": "Dyvedeep presents three approximation techniques for deep vision models aimed at improving inference speed.\nThe techniques are novel as far as I know.\nThe paper is clear, the results are plausible.\n\nThe evaluation of the proposed techniques is does not make a compelling case that someone interested in faster inference would ultimately be well-served by a solution involving the proposed methods.\n\nThe authors delineate \"static\" acceleration techniques (e.g. reduced bit-width, weight pruning) from \"dynamic\" acceleration techniques which are changes to the inference algorithm itself. The delineation would be fine if the use of each family of techniques were independent of the other, but this is not the case. For example, the use of SPET would, I think, conflict with the use of factored weight matrices (I recall this from http://papers.nips.cc/paper/5025-predicting-parameters-in-deep-learning.pdf, but I suspect there may be more recent work). For this reason, a comparison between SPET and factored weight matrices would strengthen the case that SPET is a relevant innovation. In favor of the factored-matrix approach, there would I think be fewer hyperparameters and the computations would make more-efficient use of blocked linear algebra routines--the case for the superiority of SPET might be difficult to make.\n\nThe authors also do not address their choice of the Xeon for benchmarking, when the use cases they identify in the introduction include \"low power\" and \"deeply embedded\" applications. In these sorts of applications, a mobile GPU would be used, not a Xeon. A GPU implementation of a convnet works differently than a CPU implementation in ways that might reduce or eliminate the advantage of the acceleration techniques put forward in this paper.\n", "rating": "6: Marginally above acceptance threshold", "confidence": "3: The reviewer is fairly confident that the evaluation is correct"}, {"review": "This work proposes a number of approximations for speeding up feed-forward network computations at inference time. Unlike much of the previous work in this area which tries to compress a large network, the authors propose algorithms that decide whether to approximate computations for each particular input example. \n\nSpeeding up inference is an important problem and this work takes a novel approach. The presentation is exceptionally clear, the diagrams are very beautiful, the ideas are interesting, and the experiments are good. This is a high-quality paper. I especially enjoyed the description of the different methods proposed  (SPET, SDSS, SFMA) to exploit patterns in the classifer. \n\nMy main concern is that the significance of this work is limited because of the additional complexity and computational costs of using these approximations. In the experiments, the DyVEDeep approach was compared to serial implementations of four large classification models --- inference in these models is order of magnitudes faster on systems that support parallelization. I assume that DyVEDeep has little-to-no performance advantage on a system that allows parallelization, and so anyone looking to speed up their inference on a serial system would want to see a comparison between this approach and the model-compression approaches. Thus, I am not sure how much of an impact this approach can have in it's current state.\n\nSuggestions:\n-I wondered what (if any) bounds could be made on the approximation errors of the proposed methods?", "rating": "7: Good paper, accept", "confidence": "3: The reviewer is fairly confident that the evaluation is correct"}, {"review": "The authors describe a series of techniques which can be used to reduce the total amount of computation that needs to be performed in Deep Neural Networks. The authors propose to selectively identify how important a certain set of computations is to the final DNN output, and to use this information to selectively skip certain computations in the network. As deep learning technologies become increasingly widespread on mobile devices, techniques which enable efficient inference on such devices are becoming increasingly important for practical applications. \n\nThe paper is generally well-written and clear to follow. I had two main comments that concern the experimental design, and the relationship to previous work:\n\n1. In the context of deployment on mobile devices, computational costs in terms of both system memory as well as processing are important consideration. While the proposed techniques do improve computational costs, they don\u2019t reduce model size in terms of total number of parameters. Also, the gains obtained using the proposed method appear to be similar to other works that do allow for improvements in terms of both memory and computation (see, e.g., (Han et al., 2015)). It would have been interesting if the authors had reported results when the proposed techniques were applied to models that have been compressed in size as well.\n\nS. Han, H. Mao, and W. J. Dally. \"Deep compression: Compressing deep neural network with pruning, trained quantization and huffman coding.\" arXiv prepring arXiv:1510.00149 (2015).\n\n2. The SDSS technique in the paper appears to be very similar to the \u201cPerforated CNN\u201d technique proposed by Figurnov et al. (2015). In that work, as in the authors work, CNN activations are approximated by interpolating responses from neighbors. The authors should comment on the similarity and differences between the proposed method and the referenced work.\n\nFigurnov, Michael, Dmitry Vetrov, and Pushmeet Kohli. \"Perforatedcnns: Acceleration through elimination of redundant convolutions.\" arXiv preprint  arXiv:1504.08362 (2015).\n\nOther minor comments appear below:\n\n3. A clarification question: In comparing the proposed methods to the baseline, in Section 4, the authors mention that they used their own custom implementation. However, do the baselines use the same custom implementation, or do they used the optimized BLAS libraries?\n\n4. The authors should also consider citing the following additional references:\n * S. Tan and K. C. Sim, \"Towards implicit complexity control using variable-depth deep neural networks for automatic speech recognition,\" 2016 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), Shanghai, 2016, pp. 5965-5969.\n * Graves, Alex. \"Adaptive Computation Time for Recurrent Neural Networks.\" arXiv preprint arXiv:1603.08983 (2016).\n\n5. Please explain what the Y-axis in Figure 7 represents in the text.\n\n6. Typographical Error: Last paragraph of Section 2: \u201c... are qualitatively different the aforementioned ...\u201d \u2192 \u201c... are qualitatively different from the aforementioned ...\u201d", "rating": "6: Marginally above acceptance threshold", "confidence": "4: The reviewer is confident but not absolutely certain that the evaluation is correct"}]}